name: Sync Documenti (compilati) a repo Atlas

on:
  push:
    paths:
      - "Tutti i documenti/**"
    branches:
      - main
  workflow_dispatch: 

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ProvaDocumenti repo
        uses: actions/checkout@v4

      # --- SOLUZIONE VELOCITÀ (CACHE EFFICIENTE) ---
      - name: Set up TeX Live (con cache)
        uses: zauguin/install-texlive@v4
        with:
          # Lista di pacchetti aggiornata per essere più robusta
          packages: >-
            collection-fontsrecommended
            collection-latexextra
            collection-pictures
            babel-italian

      # --- Compilazione (CORRETTA per le immagini) ---
      - name: Compila i file .tex in PDF (mantenendo la struttura)
        run: |
          cd Tutti i documenti
          echo "Compilo tutti i file .tex trovati..."
          find . -name "*.tex" -print0 | while IFS= read -r -d '' texfile; do
            echo "Compilando $texfile..."
            OUTPUT_DIR=$(dirname "$texfile")
            pdflatex -interaction=nonstopmode -output-directory="$OUTPUT_DIR" "$texfile"
            pdflatex -interaction=nonstopmode -output-directory="$OUTPUT_DIR" "$texfile"
          done
          echo "Compilazione terminata."
          cd ..

      # --- Deploy (con HTTPS Token) ---
      - name: Clona la repo del sito web
        run: |
          git clone https://x-access-token:${{ secrets.SITE_REPO_TOKEN }}@github.com/AtlasTeam9/Atlas.git site

      - name: Sincronizza i PDF compilati nel sito
        run: |
          echo "Sincronizzo i PDF in site/docs..."
          rsync -av --delete \
                --include="*/" \
                --include="*.pdf" \
                --exclude="*" \
                Tutti i documenti/ site/docs/
          
          if [ -z "$(ls -A site/docs)" ]; then
            touch site/docs/.gitkeep
          fi
          echo "Contenuto di site/docs dopo rsync:"
          ls -laR site/docs

      # --- Pulizia ---
      - name: Pulisci i PDF da Tutti i documenti
        run: |
          echo "Pulisco i file compilati dal repository sorgente..."
          cd Tutti i documenti
          find . -name "*.pdf" -delete
          find . -name "*.aux" -delete
          find . -name "*.log" -delete
          find . -name "*.out" -delete
          find . -name "*.toc" -delete
          cd ..

      # --- Commit Finale ---
      - name: Commit e push delle modifiche
        run: |
          cd site
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add docs/
          # Se stai aggiornando l'index, decommenta la riga seguente
          # git add index.html 
          
          git commit -m "Sync new compiled docs" || echo "No changes to commit"
          git push

      # --- NUOVO STEP FINALE: Invia il segnale di Deploy ---
      - name: Trigger Deploy su Atlas
        env:
          # Usiamo il token che già hai, assicurati che abbia lo scope 'repo'
          GITHUB_TOKEN: ${{ secrets.SITE_REPO_TOKEN }}
          REPO_OWNER: "AtlasTeam9"
          REPO_NAME: "Atlas"
          EVENT_TYPE: "docs-updated" # Deve corrispondere a quello in pages.yml
        run: |
          echo "Invio segnale 'repository_dispatch' a $REPO_OWNER/$REPO_NAME"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/dispatches \
            -d '{"event_type":"$EVENT_TYPE"}'
